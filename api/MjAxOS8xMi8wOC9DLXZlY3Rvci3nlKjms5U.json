{"title":"C++ vector 用法","date":"2019-12-08T08:11:14.000Z","date_formatted":{"ll":"Dec 8, 2019","L":"12/08/2019","MM-DD":"12-08"},"link":"2019/12/08/C-vector-用法","updated":"2019-12-08T08:35:46.748Z","content":"<html><head></head><body><ol>\n<li>声明以及初始化<figure class=\"highlight\"><div><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> a; <span class=\"comment\">// 声明一个int型的向量a</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">a</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>; <span class=\"comment\">// 声明一个初始大小为10的向量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">a</span><span class=\"params\">(n)</span></span>; <span class=\"comment\">// 声明一个初始大小为n的向量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">a</span><span class=\"params\">(n,<span class=\"number\">1</span>)</span></span>; <span class=\"comment\">// 声明一个初始大小为n且初值都为1的向量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">b</span><span class=\"params\">(a)</span></span>; <span class=\"comment\">// 声明并用向量a初始化向量b</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">b</span><span class=\"params\">(a.<span class=\"built_in\">begin</span>(),a.<span class=\"built_in\">begin</span>()+<span class=\"number\">3</span>)</span></span>; <span class=\"comment\">// 将向量a中的第0个到第2个作为向量b的初始值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> m[]={<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>};</span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">a</span><span class=\"params\">(n,n+<span class=\"number\">5</span>)</span></span>; <span class=\"comment\">// 将数组n的前5个元素作为向量a的初始值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> <span class=\"title\">a</span><span class=\"params\">(&n[<span class=\"number\">1</span>],&n[<span class=\"number\">4</span>])</span></span>; <span class=\"comment\">// 将n[1]~n[4]范围内的元素作为向量a的初始值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span><<span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>> > <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">10</span>,<span class=\"built_in\">vector</span><<span class=\"keyword\">int</span>>(<span class=\"number\">5</span>))</span></span>; <span class=\"comment\">// 创建一个10*5的int型二维向量</span></span><br></pre></td></tr></tbody></table></div></figure></li>\n<li>size 与 capacity 的区别<br>size 是指当前向量中所包含的元素的个数，取决于你向向量中添加了多少元素。resize() 函数可以改变 size 的大小。<br>capacity 是指向量当前使用的空间量，表示当前分配给了该向量多少空间，它总是大于或等于 size。reserve() 函数可以改变 capacity 的大小。</li>\n</ol>\n</body></html>","prev":{"title":"KMP 算法","link":"2019/12/19/KMP-算法"},"next":{"title":"Boyer-Moore算法","link":"2019/11/28/Boyer-Moore算法"},"plink":"http://hespoon.github.io/2019/12/08/C-vector-用法/","copyright":{"author":"John Doe","link":"<a href=\"http://hespoon.github.io/2019/12/08/C-vector-用法/\" title=\"C++ vector 用法\">http://hespoon.github.io/2019/12/08/C-vector-用法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}